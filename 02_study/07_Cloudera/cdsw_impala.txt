## CDSW의 python과 R에서  Impala 사용하기 위한 설정 방법

# 참고 문서
# https://github.com/cloudera/impyla
# https://blog.cloudera.com/blog/2017/07/implyr-r-interface-for-apache-impala/


vi impala.Dockerfile
#################################################################
FROM  docker.repository.cloudera.com/cdsw/engine:5

RUN  add-apt-repository ppa:openjdk-r/ppa  && \
     apt-get update   && \
     apt-get install -y openjdk-7-jdk

#https://files.pythonhosted.org/packages/80/93/f0d226061ee4679d5b593c88c7b2e9e077a271c799d29facf31bf03666c1/impyla-0.14.1.tar.gz
#https://files.pythonhosted.org/packages/aa/ef/2eb38a90ad40d0451a5228e76                                   0505567ff4cd3d8a936341a43a885fa8aa0/bitarray-0.8.2.1.tar.gz
#https://files.pythonhosted.org/packages/f4/19/cca118cf7d2087310dbc8bd70dc7df0c1320f2652873a93d06d7ba356d4a/thriftpy-0.3.9.tar.gz
#https://files.pythonhosted.org/packages/a3/58/35da89ee790598a0700ea49b2a66594140f44dec458c07e8e3d4979137fc/ply-3.11-py2.py3-none-any.whl
RUN pip install impyla && pip3 install impyla

RUN wget -O ImpalaJDBC41.jar  https://github.com/braveji18/mystudy/blob/master/02_study/07_Cloudera/ImpalaJDBC41.jar?raw=true
RUN mv ImpalaJDBC41.jar /usr/local/
RUN wget -O log4j-1.2.17.jar  https://github.com/braveji18/mystudy/blob/master/02_study/07_Cloudera/log4j-1.2.17.jar?raw=true
RUN mv log4j-1.2.17.jar /usr/local/

RUN wget https://cran.r-project.org/src/contrib/Archive/RJDBC/RJDBC_0.2-7.tar.gz
RUN wget https://cran.r-project.org/src/contrib/Archive/rJava/rJava_0.9-9.tar.gz
RUN wget https://cran.r-project.org/src/contrib/Archive/DBI/DBI_0.8.tar.gz
RUN wget http://cran.rstudio.com/src/contrib/dbplyr_1.2.1.tar.gz
RUN wget http://cran.rstudio.com/src/contrib/implyr_0.2.4.tar.gz

ADD implyr_0.2.4.tar.gz  /src/implyr_0.2.4.tar.gz

RUN R CMD javareconf
RUN R CMD INSTALL rJava_0.9-9.tar.gz
RUN R CMD INSTALL DBI_0.8.tar.gz
RUN R CMD INSTALL RJDBC_0.2-7.tar.gz
RUN R CMD INSTALL dbplyr_1.2.1.tar.gz
RUN R CMD INSTALL implyr_0.2.4.tar.gz

RUN R -e "install.packages(c('sparklyr'), repos='http://cran.rstudio.com', type='source')"


RUN rm -f *.tar.gz
#################################################################


#docker build --network host -t goodmit/cdsw-impala:1 . -f impala.Dockerfile

docker build --network host -t cdsw-dbs/cdsw:5.1 . -f cdsw-dbs.Dockerfile

docker save cdsw-dbs/cdsw:5.1 | gzip -c > cdsw-dbs-cdsw_51.tar.gz

docker load --input cdsw-dbs-cdsw_51.tar.gz

# sparklyr 테스트 코드 
https://github.com/cloudera/cdsw-training

# python 테스트 코드
from impala.dbapi import connect
conn = connect(host='my.host.com', port=21050)
cursor = conn.cursor()
cursor.execute('SELECT * FROM students LIMIT 100')
from impala.util import as_pandas
df = as_pandas(cursor)
print( df )


#  R 테스트 코드
library(implyr)
library(RJDBC)

impala_classpath <- list.files(path = "/usr/local", pattern = "\\.jar$", full.names = TRUE)
impala_classpath
.jinit(classpath = impala_classpath)

drv <- JDBC(
  driverClass = "com.cloudera.impala.jdbc41.Driver",
  classPath = impala_classpath,
  identifier.quote = "`"
)

impala <- src_impala(drv, "jdbc:impala://172.16.15.130:21050", "hue", "hue")
src_tbls(impala)
flights_tbl <- tbl(impala, "pat_table") 
head( flights_tbl )
