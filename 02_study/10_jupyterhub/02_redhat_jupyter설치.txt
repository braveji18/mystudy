# 참고 : https://gist.github.com/johnrc/604971f7d41ebf12370bf5729bf3e0a4#file-jupyterhub-md

#########################################################################
## jupyterhub 설치
#########################################################################
yum install wget bzip2 -y

wget https://repo.continuum.io/archive/Anaconda3-5.2.0-Linux-x86_64.sh
chmod u+x Anaconda3-5.2.0-Linux-x86_64.sh
./Anaconda3-5.2.0-Linux-x86_64.sh

export PATH=/opt/anaconda3/bin:$PATH


conda update --yes conda  # 4.5.8-py36_0
conda install --yes numpy scipy pandas matplotlib cython pyzmq scikit-learn  \
          seaborn six statsmodels pip tornado jinja2 sphinx pygments nose readline sqlalchemy \
          ipython jupyter  
          

curl --silent --location https://rpm.nodesource.com/setup_8.x | bash -
# nodejs.x86_64 2:8.11.3-1nodesource
yum install nodejs -y
npm install -g configurable-http-proxy
# /usr/bin/configurable-http-proxy -> /usr/lib/node_modules/configurable-http-proxy/bin/configurable-http-proxy
 
#certifi-2018.4.16-py36_0
#conda-4.5.8-py36_1
conda install --yes -c conda-forge jupyterhub  # installs jupyterhub and proxy
conda install --yes notebook  # needed if running the notebook servers locally

#jupyterhub-ldapauthenticator-1.2.2-py36_0
#ldap3-2.5-py_1
conda install -c conda-forge jupyterhub-ldapauthenticator 

pip install dockerspawner

# Set up IPython kernel
rm -rf /usr/local/share/jupyter/kernels/* && \
    python -m IPython kernelspec install-self

jupyterhub --generate-config

openssl genrsa -des3 -passout pass:x -out server.pass.key 2048 && \
    openssl rsa -passin pass:x -in server.pass.key -out server.key && \
    rm -f server.pass.key
openssl req -new -key server.key -out server.csr \
    -subj "/C=KO/ST=mapo/L=Seoul/O=BigData/OU=IT Department/CN=goodmit.com" && \
    openssl x509 -req -days 365 -in server.csr -signkey server.key -out server.crt
    
jupyterhub -f jupyterhub_config.py


# setlinux disable


#!/bin/sh
searchdir=/root/jupyterhub
for entry in $searchdir/*tar.bz2
do
    echo "$entry"
    conda install -y $entry
done


#########################################################################
## docker 설치
#########################################################################
# Redhat에서는 아래 방법 참조
https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux_atomic_host/7/html-single/getting_started_with_containers/index

# 참조 : https://docs.docker.com/install/linux/docker-ce/centos/
yum install docker-ce -y
systemctl start docker
systemctl enable docker

docker pull jupyter/all-spark-notebook


# https://github.com/jupyterhub/dockerspawner
# dockerspawner 설정 방법
pip install dockerspawner

vi jupyterhub_config.py
```
from IPython.utils.localinterfaces import public_ips
c.JupyterHub.hub_ip = public_ips()[0]

import os
import sys

c.JupyterHub.spawner_class = 'dockerspawner.SystemUserSpawner'
#c.SystemUserSpawner.host_homedir_format_string = '/home/{username}'
c.DockerSpawner.image = 'docker.io/jupyter/all-spark-notebook'
#c.DockerSpawner.tls_cert = os.environ['DOCKER_TLS_CERT']
#c.DockerSpawner.tls_key = os.environ['DOCKER_TLS_KEY']
c.DockerSpawner.remove_containers = True
#c.DockerSpawner.volumes = {os.environ['NBGRADER_EXCHANGE']: os.environ['NBGRADER_EXCHANGE']}
c.DockerSpawner.extra_host_config = {'mem_limit': '2g'}
c.DockerSpawner.container_ip = c.JupyterHub.hub_ip
c.JupyterHub.ssl_cert = 'server.crt'
c.JupyterHub.ssl_key = 'server.key'
```



# https://github.com/jupyterhub/dockerspawner
# dockerspawner 설정 방법
pip install sudospawner 
vi jupyterhub_config.py
```
c.JupyterHub.hub_ip = ''

c.JupyterHub.authenticator_class = 'ldapauthenticator.LDAPAuthenticator'
c.LDAPAuthenticator.server_address =  '10.10.1.149:389'
c.LDAPAuthenticator.bind_dn_template = [
    "uid={username},ou=People,dc=itzgeek,dc=local",
    "uid={username},ou=developers,dc=wikimedia,dc=org",
]

c.JupyterHub.spawner_class='sudospawner.SudoSpawner'
c.JupyterHub.ssl_cert = 'server.crt'
c.JupyterHub.ssl_key = 'server.key'
```






